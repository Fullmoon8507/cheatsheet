****************************************************************************************************
* NumPy
****************************************************************************************************
【前提】
numpy==1.19.5

【インポート】
|--------------------|
| 構文               |
|--------------------|
| import numpy as np |
|--------------------|

【作成・初期化・変更】
|----------------------------------------+------------------------------------------------|
| 構文                                   | 内容                                           |
|----------------------------------------+------------------------------------------------|
| a = np.array({list})                   | {list}の内容で1次元配列を作成。                |
| a = np.array([{list1}, {list2}, ...])  | {listx}の内容でN次元配列を作成。               |
|----------------------------------------+------------------------------------------------|
| a = np.zeros({list})                   | {list}次元配列を初期値0(float64型)で作成。     |
| a = np.ones({list})                    | {list}次元配列を初期値1(float64型)で作成。     |
|----------------------------------------+------------------------------------------------|
| a = np.arange({stop})                  | 0≦n<{stop} 間隔1の等差数列を生成。            |
| a = np.arange({start}, {stop})         | {start}≦n<{stop} 間隔1の等差数列を生成。      |
| a = np.arange({start}, {stop}, {step}) | {start}≦n<{stop} 間隔{step}の等差数列を生成。 |
|----------------------------------------+------------------------------------------------|
| a = x.T                                | ndarray xの行と列を入れ替えたものを取得。      |
|----------------------------------------+------------------------------------------------|

【情報取得】
|---------+-----------------------------------------------|
| 構文    | 内容                                          |
|---------+-----------------------------------------------|
| a.shape | ndarrayの形状（各次元のサイズ）をタプルで取得 |
| a.ndim  | ndarrayの次元数                               |
|---------+-----------------------------------------------|

【計算】
|------------------+------------|
| 構文             | 内容       |
|------------------+------------|
| x = np.dot(a, b) | aとbの内積 |
|------------------+------------|

【三角関数】
|-----------------+---------------------------------------+-----------|
| 構文            | 内容                                  | 備考      |
|-----------------+---------------------------------------+-----------|
| np.pi           | πを返す                              | πは180度 |
|-----------------+---------------------------------------+-----------|
| a = np.sin({x}) | {x}度の正弦関数(sin(x), サイン)       |           |
| a = np.cos({x]) | {x}度の余弦関数(cos(x), コサイン)     |           |
| a = np.tan({x}) | {x}度の正接関数(tan(x), タンジェント) |           |
|-----------------+---------------------------------------+-----------|

【ランダム】
|--------------------------------------+--------------------------------------------------------+------|
| 構文                                 | 内容                                                   | 備考 |
|--------------------------------------+--------------------------------------------------------+------|
| a = np.random.randn(d0, d1, ..., dn) | 平均0標準偏差1の正規分布の乱数配列を、引数の次元で生成 |      |
|--------------------------------------+--------------------------------------------------------+------|
| np.random.shuffle({list})            | {list}をシャッフルして並べ替える                       |      |
|--------------------------------------+--------------------------------------------------------+------|

****************************************************************************************************
* psycopg2
****************************************************************************************************
【前提】
psycopg2==2.8.5

【インポート】
|-----------------|
| 構文            |
|-----------------|
| import psycopg2 |
|-----------------|

【サーバ接続】
|-----------------------------------------+---------------------------------------------------------------------|
| 構文                                    | 内容                                                                |
|-----------------------------------------+---------------------------------------------------------------------|
| conn = psycopg2.connect({database_url}) | {database_url}へ接続する。                                          |
|                                         | {database_url}のフォーマットは以下の通り。                          |
|                                         | ・「postgres://{username}:{password}@{hostname}:{port}/{database}」 |
|-----------------------------------------+---------------------------------------------------------------------|

【カーソル】
|---------------------+----------------|
| 構文                | 内容           |
|---------------------+----------------|
| cur = conn.cursor() | カーソルを取得 |
|---------------------+----------------|

【SQL実行】
|--------------------+-----------------|
| 構文               | 内容            |
|--------------------+-----------------|
| cur.execute({SQL}) | {SQL}を実行する |
|--------------------+-----------------|

【クローズ】
|-------------+--------------------|
| 構文        | 内容               |
|-------------+--------------------|
| cur.close() | カーソルをクローズ |
| conn.cose() | 接続をクローズ     |
|-------------+--------------------|
