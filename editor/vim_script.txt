****************************************************************************************************
* 基本
****************************************************************************************************
【変数定義】
|--------+----------------------------------|
| 定義   | 内容                             |
|--------+----------------------------------|
| let    | 変数を定義                       |
| unlet  | 変数を削除                       |
|--------+----------------------------------|
| b:name | バッファローカル変数             |
| w:name | ウィンドウローカル変数           |
| g:name | グローバル変数（関数内では必須） |
| l:name | 関数のローカル                   |
| s:name | vimスクリプトのローカル          |
| a:name | 関数の引数（関数内のみ）         |
| v:name | Vimが定義する変数                |
|--------+----------------------------------|

【変数確認】
|--------------------------+----------------|
| Exコマンド               | 内容           |
|--------------------------+----------------|
| :let                     | 変数一覧を表示 |
| :echo {変数名}           | 変数の値を表示 |
| :echo exists('{変数名}') | 変数の値を表示 |
|--------------------------+----------------|

【変数の型】
|------------+----------------------------------------------------------|
| 定義       | 内容                                                     |
|------------+----------------------------------------------------------|
| 数値       | 32ビットまたは64ビットの符号有英数                       |
| 浮動小数点 | 浮動小数点                                               |
| 文字列     | 終端がNUL文字である8ビット符号なし文字                   |
| リスト     | 要素の順序つきの列                                       |
| 辞書       | 順序を持たない連想配列。キーと値を持つ                   |
| Funcref    | 関数への参照                                             |
| 特殊値     | v:false、v:true、v:null                                  |
| Blob       | バイナリラージオブジェクト。任意のバイトシーケンスを格納 |
|------------+----------------------------------------------------------|

【四則演算】
|-------+------------------------|
| 式    | 内容                   |
|-------+------------------------|
| a + b | 加算                   |
| a - b | 減算                   |
| a * b | 乗算                   |
| a / b | 除算（余りなし、整数） |
| a % b | 余り                   |
|-------+------------------------|

【条件分岐】
|--------------------|
| 式                 |
|--------------------|
| if {condition}     |
| 　{statements}     |
| elseif {condition} |
| 　{statements}     |
| else               |
| 　{statements}     |
| endif              |
|--------------------|

【論理演算子】
|--------+------------------------|
| 式     | 内容                   |
|--------+------------------------|
| a == b | 等しい                 |
| a != b | 等しくない             |
|--------+------------------------|
| a > b  | 大きい                 |
| a >= b | 以上                   |
| a < b  | 小さい                 |
| a <= b | 以下                   |
|--------+------------------------|
| a =~ b | パターンにマッチ       |
| a !~ b | パターンにマッチしない |
|--------+------------------------|

【繰り返し処理】
|---------------------------------------+--------------------------------------------------------------|
| 式                                    | 内容                                                         |
|---------------------------------------+--------------------------------------------------------------|
| while {expr1}                         | {expr1}が非ゼロとして評価される間、                          |
| 　{statements}                        | {statements}を繰り返す。                                     |
| endwhile                              |                                                              |
|---------------------------------------+--------------------------------------------------------------|
| for {var} in {object}                 | {object}の各要素に対して、                                   |
| 　{statements}                        | {statements}を繰り返す。                                     |
| endfor                                | {object}はListまたはBlob。                                   |
|---------------------------------------+--------------------------------------------------------------|
| for [{var1},{var2},...] in {listlist} | 上記のfor文と同様だが、                                      |
| 　{statements}                        | {listlist}の各要素がListでなければならない。                 |
| endfor                                |                                                              |
|---------------------------------------+--------------------------------------------------------------|
| continue                              | ループ内ではループの開始位置まで戻る。                       |
| break                                 | ループ内ではendwhileまたはendforの後のコマンドまでスキップ。 |
|---------------------------------------+--------------------------------------------------------------|

【入力】
|---------------------------------------------+----------------------------------------------|
| 関数                                        | 内容                                         |
|---------------------------------------------+----------------------------------------------|
| input({prompt} [, {text} [, {completion}]]) | ユーザーがコマンラインに入力したものを返す。 |
|                                             | {prompt}をプロンプトに出力。                 |
|                                             | {text}は入力の初期値。                       |
|                                             | {completion}は補完の種類。                   |
|---------------------------------------------+----------------------------------------------|

****************************************************************************************************
* 関数
****************************************************************************************************
【関数定義】
|------------------------------------+------------------------------------|
| 式                                 | 内容                               |
|------------------------------------+------------------------------------|
| function{name}({var1}, {var2}, ..) | {name}の名前で関数を定義。         |
| 　{statements}                     | 引数{varX}は「a:varX」で参照する。 |
| 　return {return_value}            | returnで呼び出し元に値を返す。     |
| endfunction                        |                                    |
|------------------------------------+------------------------------------|

【関数呼び出し】
|--------------------------------------+----------------------------------------|
| Exコマンド                           | 内容                                   |
|--------------------------------------+----------------------------------------|
| :call{function}({var1}, {var2}, ...} | callコマンド関数{function}を呼び出す。 |
|                                      | {var1},{var2}で引数を指定する。        |
|--------------------------------------+----------------------------------------|

****************************************************************************************************
* バッファ操作
****************************************************************************************************
【行操作】
|------------------------------+--------------------------------------------------|
| 関数                         | 内容                                             |
|------------------------------+--------------------------------------------------|
| getline('.')                 | カレントバッファのカレント行を取得               |
| getline({number})            | カレントバッファの{number}行目を取得             |
| getline({number1},{number2}) | カレントバッファの{number1}～{number2}行目を取得 |
| getline(0,'$')               | 先頭～行末まで取得                               |
|------------------------------+--------------------------------------------------|

****************************************************************************************************
* ウィンドウ
****************************************************************************************************
【取得】
|-------------+----------------------------------------|
| 関数        | 内容                                   |
|-------------+----------------------------------------|
| win_getid() | 現在のウィンドウのウィンドウ番号を取得 |
|-------------+----------------------------------------|

【移動】
|--------------------+--------------------------------------------+--------------------------------------------|
| 関数               | 内容                                       | 備考                                       |
|--------------------+--------------------------------------------+--------------------------------------------|
| win_gotoid({expr}) | {expr}のIDで示されるウィンドウへ移動する。 | 成功は真、ウィンドウがない場合は偽を返す。 |
|--------------------+--------------------------------------------+--------------------------------------------|

****************************************************************************************************
* その他関数
****************************************************************************************************
|----------------------------------+--------------------------------------------------------------------------|
| 関数                             | 内容                                                                     |
|----------------------------------+--------------------------------------------------------------------------|
| exists({expr})                   | 変数{expr}が存在すれば1、そうでなければ0                                 |
|----------------------------------+--------------------------------------------------------------------------|
| get({list}, {idx} [, {default}]) | リスト{list}から{idx}番目の要素を取得。                                  |
|                                  | 取得できないときは{default}を返す。{default}が省略されたときは0を返す。  |
| get({dict}, {key} [, {default}]) | 辞書{dict}からキー{key}に関連づけられた値を取得する。                    |
|                                  | 取得できないときは{default}を返す。{default}が省略されたときは-1を返す。 |
|----------------------------------+--------------------------------------------------------------------------|
| type({expr})                     | {expr}の型を示す数値を返す。                                             |
|----------------------------------+--------------------------------------------------------------------------|
